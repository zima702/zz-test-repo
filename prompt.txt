Gemini, generate a software requirements specification for an application that calls external APIs to complete and store client access requests. The client access is also for an external system. This application will have a react front end that communicates with a c# .NET back end. Both the front end and back end should use software development best practices, design patterns, and modern technology stack. The target audience is internal users that work at a company and the application is not public internet facing. The application needs to process 100 requests a day. The goal of the application is to eliminate the manual process for requesting client access and decrease processing time by making use of the external APIs the application will call. A user needs to be able to create, submit, approve, reject, and view requests. requests can specify two types of access: SSO and direct access. If direct access is selected, the user can specify a username for the access request. If SSO is specified, a username will be generated by the application for the access request, and be in a standardized format. SSO usernames that are generated will auto increment for successive requests. The access request information will include manager name, access type, account number, client name, username, client email, request type. The username, access type and request type fields are able to be edited. The request types are create access, edit access, and delete access. Each request type will call a different external API in the back end. The applicationâ€™s front end and back end should have unit tests, integration tests and robust input validation and error handling. 